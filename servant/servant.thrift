namespace go  fun.rpc
namespace php fun.rpc

struct req_ctx {
    /**
     * e,g. POST+/facebook/getPaymentRequestId/+34ca2cf6
     */
    1:string caller

    /**
     * Where the request originated.
     */
    11:optional string host

    /**
     * Remote user IP address.
     */
    12:optional string ip

    /**
     * Session id.
     */
    13:optional string sid
}

/**
 * Thrift don't support service multiplex, so we have to bury all
 * services into the giant FunServant.
 *
 * We don't want to use different port for different service for 
 * multiplex of service, that will lead to complexity for client.
 */
service FunServant {
    /**
     * @return string - always 'pong'
     */
    string ping(),

    /**
     * Write a dlog event.
     *
     * timestamp will be generated by servant.
     *
     * @param string category - Log filename
     * @param string tag -
     * @param string json - Client is responsible to jsonize
     */
    oneway void dlog(1: req_ctx ctx, 2: string category, 3: string tag, 4: string json),

    //=================
    // lcache section
    //=================

    bool lc_set(1: req_ctx ctx, 2: string key, 3: binary value),
    binary lc_get(1: req_ctx ctx, 2: string key),
    oneway void lc_del(1: req_ctx ctx, 2: string key),

    //=================
    // memcache section
    //=================

    /**
     * Set
     *
     * @param req_ctx ctx - Request context info.
     * @param string key -
     * @param binary value -
     * @param i32 expiration - in seconds: either a relative time from now (up to 1 month), or 
     *     an absolute Unix epoch time. Zero means the Item has no expiration time.
     */
    bool mc_set(1: req_ctx ctx, 2: string key, 3: binary value, 4: i32 expiration),

    /**
     * Get
     *
     * @param req_ctx ctx - Request context info.
     * @param string key -
     * @return binary - Value of the key
     */
    binary mc_get(1: req_ctx ctx, 2: string key),

}
